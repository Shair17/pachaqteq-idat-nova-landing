---
import { Marquee } from "./Marquee";
import MentorItem from "./MentorItem.astro";
import { TypingAnimation } from "./TypingAnimation";

const mentors = [
  {
    name: "Jack",
    body: "Experto en Cosa 1",
    img: "https://avatar.vercel.sh/jack",
  },
  {
    name: "Jill",
    body: "Experto en Cosa 2",
    img: "https://avatar.vercel.sh/jill",
  },
  {
    name: "John",
    body: "Experto en Cosa 3",
    img: "https://avatar.vercel.sh/john",
  },
  {
    name: "Jane",
    body: "Experto en Cosa 4",
    img: "https://avatar.vercel.sh/jane",
  },
  {
    name: "Jenny",
    body: "Experto en Cosa 5",
    img: "https://avatar.vercel.sh/jenny",
  },
  {
    name: "James",
    body: "Experto en Cosa 6",
    img: "https://avatar.vercel.sh/james",
  },
  {
    name: "John",
    body: "Experto en Cosa 7",
    img: "https://avatar.vercel.sh/john",
  },
  {
    name: "Jane",
    body: "Experto en Cosa 8",
    img: "https://avatar.vercel.sh/jane",
  },
  {
    name: "Jenny",
    body: "Experto en Cosa 9",
    img: "https://avatar.vercel.sh/jenny",
  },
  {
    name: "James",
    body: "Experto en Cosa 10",
    img: "https://avatar.vercel.sh/james",
  },
];

const firstRow = mentors.slice(0, mentors.length / 2);
const secondRow = mentors.slice(mentors.length / 2);
---

<section id="mentors">
  <div class="mx-auto flex max-w-screen-xl flex-col gap-8 px-4 pt-7 md:px-8">
    <div class="mx-auto max-w-5xl text-center">
      <TypingAnimation
        client:visible
        className="text-3xl font-bold tracking-tight text-white md:text-5xl"
        text="<Mentores/>"
      />

      <p class="mt-6 text-base leading-8 text-white/80">
        Los equipos tendrán acceso a <strong>mentores expertos</strong> en sus áreas.
      </p>
    </div>
  </div>

  <div
    class="relative flex w-full flex-col items-center justify-center overflow-hidden pt-7 py-14"
  >
    <Marquee client:visible pauseOnHover className="[--duration:20s]">
      {
        firstRow.map((mentor) => (
          <MentorItem img={mentor.img} name={mentor.name} body={mentor.body} />
        ))
      }
    </Marquee>
    <Marquee reverse pauseOnHover className="[--duration:20s]">
      {
        secondRow.map((mentor) => (
          <MentorItem img={mentor.img} name={mentor.name} body={mentor.body} />
        ))
      }
    </Marquee>
    <div
      class="pointer-events-none absolute inset-y-0 left-0 w-1/3 bg-gradient-to-r from-black"
    >
    </div>
    <div
      class="pointer-events-none absolute inset-y-0 right-0 w-1/3 bg-gradient-to-l from-black"
    >
    </div>
  </div>
</section>
